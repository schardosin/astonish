state:
  - name: destination
    type: str
    default: null
  - name: travel_dates
    type: str
    default: null
  - name: budget
    type: str
    default: null
  - name: interests
    type: str
    default: null
  - name: itinerary
    type: str
    default: null
  - name: finalized_itinerary
    type: str
    default: null
  - name: user_request
    type: str
    default: null
  - name: research_results
    type: str
    default: null
  - name: response
    type: str
    default: null
  - name: feedback
    type: str
    default: null
  - name: websearch_list
    type: str
    default: null
  - name: websearch_results
    type: str
    default: null
  - name: max_rev_create_itinerary
    type: int
    default: 0
  - name: special_requests
    type: str
    default: null

nodes:
  - name: user_interaction
    type: input
    prompt: "Welcome to the Travel Planner! Please provide details about your trip (destination, dates, budget, interests)."
    is_initial: true
    output_model:
      user_request: str

  - name: gather_info
    type: llm
    system: |
      You are a travel agent gathering information for a trip. Based on the user's input, determine what information is provided and what is still needed.
      If this is the first interaction and no user input is provided, ask for all the necessary information.
    prompt: |
      new user input: {user_request}

      Already collected information:
      Destination: {destination}
      Travel Dates: {travel_dates}
      Budget: {budget}
      Interests: {interests}
      Special Requests: {special_requests}

      if all the required fields are provided (destination, dates, budget, interests), inform the user a summary of the information collected and that will be used to generate the itinerary.
      Otherwise, ask for the missing information.
    output_model:
      response: str
      destination: str | None
      travel_dates: str | None
      budget: str | None
      interests: str | None
      special_requests: str | None
    user_message:
      - response

  - name: search
    type: llm
    tools: True
    system: |
      You have access to internet search tools. Use these tools to find relevant information 
      about the destination, including cultural events, best restaurants, and travel guides 
      for the specified dates.
    prompt: |
      Destination: {destination}
      Travel Dates: {travel_dates}
      Budget: {budget}
      Interests: {interests}
      Special Requests: {special_requests}

      Please use the available internet search tools to find information about {destination} during {travel_dates}, 
      considering the budget of {budget} and interests in {interests}. 
      Focus on popular attractions, local cuisine, current events, and festivals during the travel dates.
      Also, consider any special requests: {special_requests}

      Compile the most relevant and useful information you find into a comprehensive summary.
    output_model:
      websearch_results: str
    print_state: False

  - name: research
    type: llm
    system: |
      You are a travel research assistant. Based on the following user's preferences and web search results, analyze the data to gather key information about the destination:
      Please provide information about popular attractions, local cuisine, and any current events or festivals during the travel dates.
    prompt: |
      Destination: {destination}
      Travel Dates: {travel_dates}
      Budget: {budget}
      Interests: {interests}
      Special Requests: {special_requests}
      Web Search Results: {websearch_results}

    output_model:
      research_results: str

  - name: create_itinerary
    type: llm
    limit: 2
    limit_counter_field: max_rev_create_itinerary
    system: |
      You are an expert travel planner creating an itinerary for a family trip. Use the following research information and user preferences to create a detailed day-by-day itinerary:
      Create a detailed day-by-day itinerary for their trip. Include specific activities,
      estimated times, and brief descriptions. Ensure the plan fits within their budget and interests,
      and incorporates the attractions and events mentioned in the research.

      IMPORTANT: itinerary is a single column inside the json, with each day's activities separated by newlines.

      Add an introduction sentence explaining how why this is the recommended proposal, what was the best option, and how it was created, before showing the detailed itinerary.

      Add links from the web search results for the recommended attractions/events.

      Below is an example of the response to be generated:
      Day 1: [Destination Name]

      Morning:
      • 08:00 - Breakfast at [Restaurant Name]
      • 09:30 - Visit [Attraction 1]
      • 11:30 - Explore [Neighborhood/Area]

      Afternoon:
      • 13:00 - Lunch at [Restaurant Name]
      • 14:30 - Tour [Attraction 2]
      • 16:30 - Free time for shopping/relaxation

      Evening:
      • 19:00 - Dinner at [Restaurant Name]
      • 21:00 - [Evening Activity] (e.g., night tour, show, or local experience)

      Day 2: [Destination Name or Day Trip Location]

      Morning:
      • 07:30 - Breakfast at hotel
      • 08:30 - Depart for [Day Trip Location]
      • 10:00 - Guided tour of [Attraction 3]

      Afternoon:
      • 12:30 - Lunch at [Local Restaurant]
      • 14:00 - [Outdoor Activity] (e.g., hiking, boating, or beach time)
      • 16:30 - Visit [Local Market or Shop]

      Evening:
      • 18:30 - Return to [Original Destination]
      • 20:00 - Dinner at [Restaurant Name]
    prompt: |
      Destination: {destination}
      Travel Dates: {travel_dates}
      Budget: {budget}
      Interests: {interests}
      Special Requests: {special_requests}
      Web Search Results: {websearch_results}
      max_rev_create_itinerary: {max_rev_create_itinerary}

      This is the current itinerary:
      {itinerary}

      This is the current feedback from the reviewer about the current itinerary, take it in consideration for creating the itinerary
      {feedback}

      Research Results:
      {research_results}
    output_model:
      itinerary: str

  - name: review_itinerary
    type: llm
    system: |
      You are a travel critic. Review the proposed itinerary and provide feedback. 
      Consider factors such as pacing, variety of activities, and alignment with the user's interests and budget. 
      Suggest specific improvements or alternatives if necessary.
    prompt: |
      Destination: {destination}
      Travel Dates: {travel_dates}
      Budget: {budget}
      Interests: {interests}
      Special Requests: {special_requests}
      Web Search Results: {websearch_results}

      Current Itinerary:
      {itinerary}
    output_model:
      feedback: str

  - name: finalize_itinerary
    type: llm
    system: |
      You are a travel agent expert in providing itinerary to clients. 
      Your goal is to structure the provided itinerary in a way that is aligned with a common way of delivering information to clients, making it simple to read and providing additional comments to make the clients exceited.
    prompt: |
      Here is the itinerary for the traveler: {itinerary}

      Please create a response by first introducing yourself as Lana, your virtual personal assistant, and say that your happy to and excited with the coming travel experience.

      Add all the information to the finalized_itinerary field only
    output_model:
      finalized_itinerary: str
    user_message:
      - finalized_itinerary

  - name: user_itinerary_feedback
    type: input
    prompt: "Here's your itinerary. Would you like any modifications or have any special requests? If yes, please provide details. If not, just say 'No'."

  - name: process_special_requests
    type: llm
    system: |
      You are a travel agent processing special requests for a trip itinerary. 
      Analyze the user's request and determine if any changes or additions are needed to the current itinerary.
    prompt: |
      Current itinerary:
      {itinerary}

      Current special requests:
      {special_requests}

      New user request:
      {user_request}

      Please analyze the new user request and determine if it should be added to the special requests.
      If it should be added, combine it with any existing special requests.
      If the user said 'No' or didn't provide any new requests, return empty to special_requests field.

      If there is a special request, inform the user in the response field that you will add it to the itinerary.
    output_model:
      special_requests: str
      response: str
    user_message:
      - response

flow:
  - from: START
    to: user_interaction
  - from: user_interaction
    to: gather_info
  - from: gather_info
    edges:
      - to: search
        condition: "lambda x: all(x.get(field) for field in ['destination', 'travel_dates', 'budget', 'interests'])"
      - to: user_interaction
        condition: "lambda x: not all(x.get(field) for field in ['destination', 'travel_dates', 'budget', 'interests'])"
  - from: search
    to: research
  - from: research
    to: create_itinerary
  - from: create_itinerary
    edges:
      - to: review_itinerary
        condition: "lambda x, config: x['max_rev_create_itinerary'] < config['limit']"
      - to: finalize_itinerary
        condition: "lambda x, config: x['max_rev_create_itinerary'] >= config['limit']"
  - from: review_itinerary
    edges:
      - to: create_itinerary
        condition: "lambda x: x.get('feedback', '').strip() != ''"
      - to: END
        condition: "lambda x: x.get('feedback', '').strip() == ''"
  - from: finalize_itinerary
    to: user_itinerary_feedback
  - from: user_itinerary_feedback
    to: process_special_requests
  - from: process_special_requests
    edges:
      - to: create_itinerary
        condition: "lambda x: x.get('special_requests', '').strip() != ''"
      - to: END
        condition: "lambda x: x.get('special_requests', '').strip() == ''"
